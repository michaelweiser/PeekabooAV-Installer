apiVersion: v1
kind: Service
metadata:
  name: cortex
  namespace: peekabooav-pipeline
spec:
  selector:
    app: cortex
  sessionAffinity: None
  type: NodePort
  ports:
  - name: cortex
    port: 9001
    protocol: TCP
    targetPort: 9001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cortex
  namespace: peekabooav-pipeline
  labels:
    app: cortex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cortex
  template:
    metadata:
      labels:
        app: cortex
    spec:
      containers:
      - name: cortex
        image: thehiveproject/cortex:3.1.4
        volumeMounts:
        - name: application
          mountPath: /etc/cortex/application.conf
          subPath: application.conf
        - name: analyzers
          mountPath: /etc/cortex/analyzers.json
          subPath: analyzers.json
        env:
        - name: CORTEX_ADMIN_PASSWORD
          value: dikka
        - name: analyzer_urls
          value: /etc/cortex/analyzers.json
        ports:
        - containerPort: 9001
          name: cortex
          protocol: TCP
      dnsPolicy: ClusterFirst
      volumes:
      - name: application
        configMap:
          name: cortex-application-conf
      - name: analyzers
        configMap:
          name: cortex-analyzers-json
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cortex-application-conf
  namespace: peekabooav-pipeline
  selfLink: /api/v1/namespaces/peekabooav-pipeline/configmaps/cortex-application-conf
data:
  application.conf: |
    auth.method.basic=true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cortex-analyzers-json
  namespace: peekabooav-pipeline
  selfLink: /api/v1/namespaces/peekabooav-pipeline/configmaps/cortex-analyzers-json
data:
  analyzers.json: |
    [
      {
        "name": "FileInfo",
        "version": "8.0",
        "author": "TheHive-Project",
        "url": "https://github.com/TheHive-Project/Cortex-Analyzers",
        "license": "AGPL-V3",
        "description": "Parse files in several formats such as OLE and OpenXML to detect VBA macros, extract their source code, generate useful information on PE, PDF files...",
        "dataTypeList": ["file"],
        "baseConfig": "FileInfo",
        "configurationItems": [
          {
            "name": "manalyze_enable",
            "description": "Wether to enable manalyze submodule or not.",
            "type": "boolean",
            "required": true,
            "multi": false,
            "defaultValue": false
          },
          {
            "name": "manalyze_enable_docker",
            "description": "Use docker to run Manalyze. Can be used only if not using the docker image of FileInfo",
            "type": "boolean",
            "required": false,
            "multi": false,
            "defaultValue": false
          },
          {
            "name": "manalyze_enable_binary",
            "description": "Use local binary to run Manalyze. Need to compile it before!",
            "type": "boolean",
            "required": false,
            "multi": false,
            "defaultValue": true
          },
          {
            "name": "manalyze_binary_path",
            "description": "Path to the Manalyze binary that was compiled before. Keep the default value if using the docker image of FileInfo ",
            "type": "string",
            "required": false,
            "multi": false,
            "defaultValue": "/worker/Manalyze/bin/manalyze"
          },
          {
            "name": "floss_enable",
            "description": "Enable the use of FireEye FLARE FLOSS",
            "type": "boolean",
            "required": false,
            "multi": false,
            "default": false
          },
          {
            "name": "floss_binary_path",
            "description": "Path to the FLOSS binary.",
            "type": "string",
            "required": false,
            "multi": false,
            "default": "/usr/bin/floss"
          },
          {
            "name": "floss_minimal_string_length",
            "description": "Length of strings must be in order to be considered.",
            "type": "number",
            "required": false,
            "multi": false,
            "default": 4
          }
        ],
        "dockerImage": "cortexneurons/fileinfo:8"
      }
    ]
